name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Database Integrity Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: jinkalikki
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r Backend/requirements.txt

      - name: Run tests
        run: |
          pytest Backend/test_main.py

  build-and-push:
    name: Build and Push Frontend Docker Image
    runs-on: ubuntu-latest
    needs: test  # Only runs if tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: |
          cd Backend  # Navigate to the correct directory
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest

  deploy:
    name: Deploy Frontend to AKS
    runs-on: ubuntu-latest
    needs: build-and-push  # Only runs if image is pushed successfully

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER }}

      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/frontend-app frontend-app=${{ secrets.DOCKER_USERNAME }}/frontend-app:latest
          kubectl apply -f Backend/deployment.yaml  # Apply deployment file from Backend folder

      - name: Verify Deployment
        run: |
          kubectl get pods
